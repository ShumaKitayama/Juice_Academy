要件定義
1. プロジェクト概要
大学内で提供するドリンクバーサービスのためのウェブアプリケーションを開発。本アプリケーションは、ユーザー管理、決済処理、お知らせ機能を中心としたミニマムリリース（MVP）を目指している。
2. 機能要件
2.1. お知らせ機能
概要: 管理者が最新情報や重要なお知らせをユーザーに表示。
詳細要件:
　•	管理者用ダッシュボードからお知らせの作成、編集、削除が可能。
　•	お知らせはタイトル、内容、作成日、更新日を含む。
　•	フロントエンドでお知らせ一覧を表示。最新順にソート。
　•	お知らせはリアルタイムで更新される（必要に応じてWebSocketの検討）。
2.2. ユーザー管理
2.2.1. 新規登録
概要: ユーザーがアカウントを作成。
詳細要件:
　•	入力フィールド:
　•	種族（学年と教職員）
　•	学籍番号
　•	名前（ふりがな）
　•	メールアドレス
　•	バリデーション:
　•	メールアドレスの形式チェック
　•	学籍番号の一意性
　•	必須項目の入力確認
　•	パスワード設定（推奨）
2.2.2. ログイン
概要: 既存ユーザーがアカウントにアクセス。
詳細要件:
　•	入力フィールド:
　•	メールアドレス
　•	パスワード
　•	認証:
　•	JWT（JSON Web Token）を使用したセッション管理
　•	パスワードのハッシュ化（bcryptなど）
　•	エラーハンドリング:
　•	誤った認証情報の提示時のフィードバック
2.2.3. 退会のページ
概要: ユーザーがアカウントを削除（退会）。
詳細要件:
　•	退会手続きの説明（前月20日までに解約手続きを行う旨の通知）
　•	確認ダイアログ（退会の最終確認）
　•	アカウント削除時のデータ処理（関連データの取り扱い）
2.3. 決済機能
概要: ユーザーがサービス利用料金を支払う。
詳細要件:
　•	Stripe APIとの連携
　•	支払い方法の登録
　•	支払いの即時処理
　•	決済ページの設計
　•	安全なデータ送信（HTTPS）
　•	決済情報のトークン化
　•	決済履歴の管理
　•	ユーザー毎の支払い履歴表示
　•	管理者用決済管理機能（必要に応じて）
3. 非機能要件
セキュリティ
　•	データの暗号化（特に個人情報および決済情報）
　•	認証と認可の厳格な管理
　•	SQLインジェクション、XSS、CSRFなどの一般的な脆弱性対策
ユーザビリティ
　•	直感的なUI/UXデザイン
　•	モバイル対応（レスポンシブデザイン）
保守性
　•	コードのドキュメント化
　•	テストの自動化（ユニットテスト、統合テスト）
セキュリティ対策
データ保護
　•	パスワードはbcryptでハッシュ化
　•	HTTPSを使用してデータ通信を暗号化
認証・認可
　•	JWTによる認証
　•	ロールベースのアクセス制御（管理者 vs 一般ユーザー）
入力バリデーション
　•	フロントエンドおよびバックエンドでの入力チェック

システムアーキテクチャ
フロントエンド
　•	React (Vite) を使用してSPA（シングルページアプリケーション）を構築。
　•	TypeScriptによる型安全な開発。
バックエンド
　•	Go + GinフレームワークでRESTful APIを提供。
　•	認証にJWTを使用。
データベース
　•	MongoDBを使用し、ユーザーデータやお知らせデータを管理。
　•	適切なインデックス設定によるクエリパフォーマンスの最適化。
コンテナ化
　•	Dockerを使用してフロントエンド、バックエンド、データベースの各サービスをコンテナ化。
　•	Docker Composeによるローカル開発環境の構築。

**API仕様**

**ユーザー関連**

•	**POST /api/register**

•	**説明**: 新規ユーザー登録

•	**リクエストボディ**:

```json
{

"role": "string", // 学年 or 教職員

"student_id": "string",

"name_kana": "string",

"email": "string",

"password": "string"

}
```

•	**レスポンス**:

•	成功: 201 Created

•	エラー: 適切なステータスコードとメッセージ

•	**POST /api/login**

•	**説明**: ユーザーログイン

•	**リクエストボディ**:

```json
{

"email": "string",

"password": "string"

}
```

•	**レスポンス**:

•	成功: 200 OK + JWTトークン

•	エラー: 401 Unauthorized など

•	**DELETE /api/account**

•	**説明**: ユーザーアカウント削除

•	**認証**: 必要（JWTトークン）

•	**レスポンス**:

•	成功: 200 OK

•	エラー: 適切なステータスコードとメッセージ

**お知らせ関連**

•	**GET /api/announcements**

•	**説明**: お知らせ一覧取得

•	**レスポンス**:

```json
[

{

"id": "string",

"title": "string",

"content": "string",

"created_at": "datetime",

"updated_at": "datetime"

},

...

]
```

•	**POST /api/announcements** (管理者のみ)

•	**説明**: お知らせ作成

•	**認証**: 管理者権限

•	**リクエストボディ**:

```json
{

"title": "string",

"content": "string"

}
```

•	**レスポンス**:

•	成功: 201 Created

•	エラー: 適切なステータスコードとメッセージ

•	**PUT /api/announcements/{id}** (管理者のみ)

•	**説明**: お知らせ編集

•	**認証**: 管理者権限

•	**リクエストボディ**:

```json
{

"title": "string",

"content": "string"

}
```

•	**レスポンス**:

•	成功: 200 OK

•	エラー: 適切なステータスコードとメッセージ

•	**DELETE /api/announcements/{id}** (管理者のみ)

•	**説明**: お知らせ削除

•	**認証**: 管理者権限

•	**レスポンス**:

•	成功: 200 OK

•	エラー: 適切なステータスコードとメッセージ

**決済関連**

•	**POST /api/payment**

•	**説明**: 支払い処理

•	**認証**: 必要（JWTトークン）

•	**リクエストボディ**:

```json
{

"payment_method_id": "string", // StripeのPayment Method ID

"amount": "number" // 支払金額（最小単位）

}
```

•	**レスポンス**:

•	成功: 200 OK + 支払い確認情報

•	エラー: 適切なステータスコードとメッセージ

•	**GET /api/payment/history**

•	**説明**: 支払い履歴取得

•	**認証**: 必要（JWTトークン）

•	**レスポンス**:

```json
[

{

"id": "string",

"amount": "number",

"status": "string",

"created_at": "datetime"

},

...

]
```

**データベース設計**

### **ユーザーページ（Users Collection）**

| **フィールド名** | **タイプ** | **説明** | **制約** |
| --- | --- | --- | --- |
| _id | ObjectId | ユニークID | 自動生成 |
| role | String | 種族（学年 or 教職員） | 必須 |
| student_id | String | 学籍番号 | 必須、ユニーク |
| name_kana | String | 名前（ふりがな） | 必須 |
| email | String | メールアドレス | 必須、ユニーク |
| password_hash | String | パスワードハッシュ | 必須 |
| created_at | Date | アカウント作成日時 | 自動設定 |
| updated_at | Date | 最終更新日時 | 自動設定 |

### **お知らせページ（Announcements Collection）**

| **フィールド名** | **タイプ** | **説明** | **制約** |
| --- | --- | --- | --- |
| _id | ObjectId | ユニークID | 自動生成 |
| title | String | お知らせタイトル | 必須 |
| content | String | お知らせ内容 | 必須 |
| created_at | Date | 作成日時 | 自動設定 |
| updated_at | Date | 更新日時 | 自動設定 |

### **支払い履歴（Payments Collection）**

| **フィールド名** | **タイプ** | **説明** | **制約** |
| --- | --- | --- | --- |
| _id | ObjectId | ユニークID | 自動生成 |
| user_id | ObjectId | ユーザーID（Users Collection参照） | 必須 |
| payment_method_id | String | Stripe Payment Method ID | 必須 |
| amount | Number | 支払金額（最小単位） | 必須 |
| status | String | 支払いステータス | 必須 |
| created_at | Date | 支払い日時 | 自動設定 |